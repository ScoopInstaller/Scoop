{
    "homepage": "http://www.vim.org",
    "license": "http://vimdoc.sourceforge.net/htmldoc/uganda.html#license",
    "version": "8.0.1475",
    "architecture": {
        "32bit": {
            "url": "https://github.com/vim/vim-win32-installer/releases/download/v8.0.1475/gvim_8.0.1475_x86.zip",
            "hash": "76be3b9e21ed1388b2250ab396d917b9cdfc992493adf65141b289dbf45257e5"
        },
        "64bit": {
            "url": "https://github.com/vim/vim-win32-installer/releases/download/v8.0.1475/gvim_8.0.1475_x64.zip",
            "hash": "bea617ab5399edcaa3c6db7a3a530368683ada3ad9b2ddcaccec42df13f5e2cd"
        }
    },
    "extract_dir": "vim\\vim80",
    "bin": [
        "vim.exe",
        [
            "vim.exe",
            "vi"
        ],
        [
            "gvim.cmd",
            "gvim"
        ]
    ],
    "pre_install": [
        "# Create gvim.cmd",
        "@\"",
        "@echo off",
        "setlocal",
        "set VIM_EXE_DIR=$dir",
        "if exist \"%VIM_EXE_DIR%\\gvim.exe\" goto havevim",
        "echo \"%VIM_EXE_DIR%\\gvim.exe\" not found",
        "goto eof",
        ":havevim",
        "rem collect the arguments in VIMARGS for Win95",
        "set VIMARGS=",
        "set VIMNOFORK=",
        ":loopstart",
        "if .%1==. goto loopend",
        "if NOT .%1==.--nofork goto noforklongarg",
        "set VIMNOFORK=1",
        ":noforklongarg",
        "if NOT .%1==.-f goto noforkarg",
        "set VIMNOFORK=1",
        ":noforkarg",
        "set VIMARGS=%VIMARGS% %1",
        "shift",
        "goto loopstart",
        ":loopend",
        "rem for WinNT we can use %*",
        "if .%VIMNOFORK%==.1 goto noforknt",
        "start \"dummy\" /b \"%VIM_EXE_DIR%\\gvim.exe\"  %*",
        "goto eof",
        ":noforknt",
        "start \"dummy\" /b /wait \"%VIM_EXE_DIR%\\gvim.exe\"  %*",
        ":eof",
        "set VIMARGS=",
        "set VIMNOFORK=",
        "\"@ | out-file -encoding oem \"$dir\\gvim.cmd\""
    ],
    "post_install": "if( !(test-path ~\\.vimrc) -and !(test-path ~\\_vimrc) -and !(test-path ~\\vimfiles\\vimrc) -and !(test-path $env:VIM\\_vimrc) ) {
        cp \"$dir\\vimrc_example.vim\" ~\\_vimrc
        \"set shell=$((gcm powershell).path)\\ -executionpolicy\\ bypass\" | out-file  ~\\_vimrc -append -encoding ascii
        echo 'Default vimrc file created in ~/_vimrc, with shell set to PowerShell.'
    } else { echo 'Existing vimrc file found, no default configuration created' }",
    "checkver": {
        "github": "https://github.com/vim/vim-win32-installer"
    },
    "autoupdate": {
        "architecture": {
            "32bit": {
                "url": "https://github.com/vim/vim-win32-installer/releases/download/v$version/gvim_$version_x86.zip",
                "extract_dir": "vim\\vim$majorVersion$minorVersion"
            },
            "64bit": {
                "url": "https://github.com/vim/vim-win32-installer/releases/download/v$version/gvim_$version_x64.zip",
                "extract_dir": "vim\\vim$majorVersion$minorVersion"
            }
        }
    },
    "suggest": {
        "vimtutor": "vimtutor"
    }
}
